"""init

Revision ID: 04802db549e2
Revises: 
Create Date: 2025-10-18 15:08:20.829784

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = '04802db549e2'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('abschnittdaten',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('titel', sqlmodel.sql.sqltypes.AutoString(length=250), nullable=True),
    sa.Column('titelen', sqlmodel.sql.sqltypes.AutoString(length=250), nullable=True),
    sa.Column('nummer', sqlmodel.sql.sqltypes.AutoString(length=8), nullable=True),
    sa.Column('typ', sa.Integer(), nullable=True),
    sa.Column('typstringkurz', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('typstringkurzen', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('typstringlang', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('typstringlangen', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('semkez', sqlmodel.sql.sqltypes.AutoString(length=5), nullable=True),
    sa.Column('uebergeordneteabschnittid', sa.Integer(), nullable=True),
    sa.Column('reihenfolge', sa.Integer(), nullable=True),
    sa.Column('angezeigterkommentar', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('angezeigterkommentaren', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('abschnittelement',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('abschnittelementtyp', sa.Integer(), nullable=False),
    sa.Column('abschnittdaten_id', sa.Integer(), nullable=True),
    sa.Column('abschnittreferenz_id', sa.Integer(), nullable=True),
    sa.Column('lerneinheit_id', sa.Integer(), nullable=True),
    sa.Column('kinderelemente_ids', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('abschnittsrefernz',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('referenzierteabschnittsid', sa.Integer(), nullable=True),
    sa.Column('homeabschnittid', sa.Integer(), nullable=True),
    sa.Column('typ', sa.Integer(), nullable=True),
    sa.Column('typstringkurz', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('typstringkurzen', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('typstringlang', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('typstringlangen', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('kommentar', sqlmodel.sql.sqltypes.AutoString(length=1000), nullable=True),
    sa.Column('kommentaren', sqlmodel.sql.sqltypes.AutoString(length=1000), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('belegungsserieort',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('veranstaltungsid', sa.Integer(), nullable=True),
    sa.Column('veranstaltungsortid', sa.Integer(), nullable=True),
    sa.Column('gebaeude', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('geschoss', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('raum', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('uhrzeitvon', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('uhrzeitbis', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('region', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('areal', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('datumvon', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('datumbis', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('typ', sa.Integer(), nullable=True),
    sa.Column('typstringkurz', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('typstringkurzen', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('typstringlang', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('typstringlangen', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('wochentag', sa.Integer(), nullable=True),
    sa.Column('wochentagstringkurz', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('wochentagstringkurzen', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('wochentagstringlang', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('wochentagstringlangen', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('semesterbezugstyp', sa.Integer(), nullable=True),
    sa.Column('semesterbezugstypstringkurz', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('semesterbezugstypstringkurzen', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('semesterbezugstypstringlang', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('semesterbezugstypstringlangen', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('orttyp', sa.Integer(), nullable=True),
    sa.Column('orttypstringkurz', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('orttypstringkurzen', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('orttypstringlang', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('orttypstringlangen', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('ortsangabetyp', sa.Integer(), nullable=True),
    sa.Column('ortsangabetypstringkurz', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('ortsangabetypstringkurzen', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('ortsangabetypstringlang', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('ortsangabetypstringlangen', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('periodizitaet', sa.Integer(), nullable=True),
    sa.Column('periodizitaetstringkurz', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('periodizitaetstringkurzen', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('periodizitaetstringlang', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('periodizitaetstringlangen', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('wochendeltabeginn', sa.Integer(), nullable=True),
    sa.Column('wochendeltaende', sa.Integer(), nullable=True),
    sa.Column('vorarbeitungszeit', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('nachbereitungszeit', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('semkez', sqlmodel.sql.sqltypes.AutoString(length=5), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('lecturer',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('firstname', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('lastname', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('golden_owl', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('lehrveranstalter',
    sa.Column('dozide', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('vorname', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('golden_owl', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('dozide')
    )
    op.create_table('lehrveranstaltung',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nummer', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('titel', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('semkez', sqlmodel.sql.sqltypes.AutoString(length=5), nullable=True),
    sa.Column('typ', sa.Enum('V', 'G', 'U', 'S', 'K', 'P', 'A', 'D', 'R', name='coursetypeenum'), nullable=True),
    sa.Column('lehrumfang', sa.Float(), nullable=True),
    sa.Column('lehrumfangtyp', sa.Enum('WEEKLY_HOURS', 'SEMESTER_HOURS', name='coursehourenum'), nullable=True),
    sa.Column('nachvereinbarung', sa.Boolean(), nullable=True),
    sa.Column('dozentauswaehlen', sa.Boolean(), nullable=True),
    sa.Column('spezialbewilligung', sa.Boolean(), nullable=True),
    sa.Column('externehoerer', sa.Boolean(), nullable=True),
    sa.Column('angezeigterkommentar', sqlmodel.sql.sqltypes.AutoString(length=1000), nullable=True),
    sa.Column('lehrveranstalter', sa.JSON(), nullable=True),
    sa.Column('timeslots', sa.JSON(), nullable=True),
    sa.Column('dozierende', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('lerneinheit',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('code', sqlmodel.sql.sqltypes.AutoString(length=12), nullable=True),
    sa.Column('titel', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('titelenglisch', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('semkez', sqlmodel.sql.sqltypes.AutoString(length=5), nullable=False),
    sa.Column('kreditpunkte', sa.Float(), nullable=True),
    sa.Column('url', sqlmodel.sql.sqltypes.AutoString(length=1000), nullable=True),
    sa.Column('literatur', sqlmodel.sql.sqltypes.AutoString(length=4000), nullable=True),
    sa.Column('literaturenglisch', sqlmodel.sql.sqltypes.AutoString(length=4000), nullable=True),
    sa.Column('lernziel', sqlmodel.sql.sqltypes.AutoString(length=4000), nullable=True),
    sa.Column('lernzielenglisch', sqlmodel.sql.sqltypes.AutoString(length=4000), nullable=True),
    sa.Column('inhalt', sqlmodel.sql.sqltypes.AutoString(length=4000), nullable=True),
    sa.Column('inhaltenglisch', sqlmodel.sql.sqltypes.AutoString(length=4000), nullable=True),
    sa.Column('skript', sqlmodel.sql.sqltypes.AutoString(length=4000), nullable=True),
    sa.Column('skriptenglisch', sqlmodel.sql.sqltypes.AutoString(length=4000), nullable=True),
    sa.Column('besonderes', sqlmodel.sql.sqltypes.AutoString(length=4000), nullable=True),
    sa.Column('besonderesenglisch', sqlmodel.sql.sqltypes.AutoString(length=4000), nullable=True),
    sa.Column('diplomasupplement', sqlmodel.sql.sqltypes.AutoString(length=4000), nullable=True),
    sa.Column('diplomasupplementenglisch', sqlmodel.sql.sqltypes.AutoString(length=4000), nullable=True),
    sa.Column('angezeigterkommentar', sqlmodel.sql.sqltypes.AutoString(length=1000), nullable=True),
    sa.Column('angezeigterkommentaren', sqlmodel.sql.sqltypes.AutoString(length=1000), nullable=True),
    sa.Column('sternkollonne', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('belegungMaxPlatzzahl', sa.Integer(), nullable=True),
    sa.Column('belegungTermin2Wl', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('belegungTermin3Ende', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('belegungsTerminStart', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('vorrang', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('primary_target_group', sa.JSON(), nullable=True),
    sa.Column('lehrsprache', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('Kurzbeschreibung', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('kompetenzen', sa.JSON(), nullable=True),
    sa.Column('kompetenzenenglisch', sa.JSON(), nullable=True),
    sa.Column('reglement', sa.JSON(), nullable=True),
    sa.Column('hilfsmittel', sqlmodel.sql.sqltypes.AutoString(length=4000), nullable=True),
    sa.Column('prufungzusatzinfo', sqlmodel.sql.sqltypes.AutoString(length=4000), nullable=True),
    sa.Column('prufungsmodus', sqlmodel.sql.sqltypes.AutoString(length=4000), nullable=True),
    sa.Column('prufungssprache', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('prufungsform', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('digital', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('distance_exam', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('recording', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('prufende', sa.JSON(), nullable=True),
    sa.Column('dozierende', sa.JSON(), nullable=True),
    sa.Column('repetition', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('groups', sa.JSON(), nullable=True),
    sa.Column('periodizitaet', sa.Enum('ONETIME', 'ANNUAL', 'SEMESTER', name='periodicity'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('section',
    sa.Column('section_id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('parent_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.PrimaryKeyConstraint('section_id')
    )
    op.create_table('semester',
    sa.Column('semkez', sqlmodel.sql.sqltypes.AutoString(length=5), nullable=False),
    sa.Column('semesterkurz', sqlmodel.sql.sqltypes.AutoString(length=10), nullable=False),
    sa.Column('semesterlang', sqlmodel.sql.sqltypes.AutoString(length=25), nullable=False),
    sa.Column('semesterlangen', sqlmodel.sql.sqltypes.AutoString(length=25), nullable=False),
    sa.Column('semesterbeginn', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('semestermitte', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('semesterende', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('semesterintervallende', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('abschnittelemente', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('semkez')
    )
    op.create_table('teachingunit',
    sa.Column('abstract', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('learning_objective', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('content', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('notice', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('competencies', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('lecture_notes', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('literature', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('other_data', sa.JSON(), nullable=True),
    sa.Column('two_semester_credits', sa.Float(), nullable=True),
    sa.Column('programme_regulations', sa.JSON(), nullable=True),
    sa.Column('together_with_number', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('ects_credits', sa.Float(), nullable=False),
    sa.Column('examiner_ids', sa.JSON(), nullable=True),
    sa.Column('assessment_type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('assessment_language', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('repetition', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('exam_block_of', sa.JSON(), nullable=True),
    sa.Column('mode', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('additional_info', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('written_aids', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('distance', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('digital', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('update_note', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('admission_requirement', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('other_assessment', sa.JSON(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('number', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('year', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('semester', sa.Enum('HS', 'FS', name='semesterenum'), nullable=False),
    sa.Column('text_language', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('language', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('teachingunit', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_teachingunit_name'), ['name'], unique=False)
        batch_op.create_index(batch_op.f('ix_teachingunit_number'), ['number'], unique=False)

    op.create_table('course',
    sa.Column('number', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('teaching_unit_id', sa.Integer(), nullable=False),
    sa.Column('slots', sa.JSON(), nullable=True),
    sa.Column('type', sa.Enum('V', 'G', 'U', 'S', 'K', 'P', 'A', 'D', 'R', name='coursetypeenum'), nullable=False),
    sa.Column('comments', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.ForeignKeyConstraint(['teaching_unit_id'], ['teachingunit.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('number')
    )
    op.create_table('examlecturerrelations',
    sa.Column('teaching_unit_id', sa.Integer(), nullable=False),
    sa.Column('lecturer_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['lecturer_id'], ['lecturer.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['teaching_unit_id'], ['teachingunit.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('teaching_unit_id', 'lecturer_id')
    )
    op.create_table('offeredinrelations',
    sa.Column('teaching_unit_id', sa.Integer(), nullable=False),
    sa.Column('section_id', sa.Integer(), nullable=False),
    sa.Column('type', sa.Enum('O', 'WPlus', 'W', 'EMinus', 'Z', 'Dr', name='unittypeenum'), nullable=False),
    sa.ForeignKeyConstraint(['section_id'], ['section.section_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['teaching_unit_id'], ['teachingunit.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('teaching_unit_id', 'section_id')
    )
    op.create_table('courselecturerrelations',
    sa.Column('course_number', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('lecturer_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['course_number'], ['course.number'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['lecturer_id'], ['lecturer.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('course_number', 'lecturer_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('courselecturerrelations')
    op.drop_table('offeredinrelations')
    op.drop_table('examlecturerrelations')
    op.drop_table('course')
    with op.batch_alter_table('teachingunit', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_teachingunit_number'))
        batch_op.drop_index(batch_op.f('ix_teachingunit_name'))

    op.drop_table('teachingunit')
    op.drop_table('semester')
    op.drop_table('section')
    op.drop_table('lerneinheit')
    op.drop_table('lehrveranstaltung')
    op.drop_table('lehrveranstalter')
    op.drop_table('lecturer')
    op.drop_table('belegungsserieort')
    op.drop_table('abschnittsrefernz')
    op.drop_table('abschnittelement')
    op.drop_table('abschnittdaten')
    # ### end Alembic commands ###
