"""add

Revision ID: 131e43fd572f
Revises: 04802db549e2
Create Date: 2025-10-18 17:34:49.051869

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import sqlite

# revision identifiers, used by Alembic.
revision: str = "131e43fd572f"
down_revision: Union[str, Sequence[str], None] = "04802db549e2"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("course")
    with op.batch_alter_table("teachingunit", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_teachingunit_name"))
        batch_op.drop_index(batch_op.f("ix_teachingunit_number"))

    op.drop_table("teachingunit")
    op.drop_table("lecturer")
    op.drop_table("examlecturerrelations")
    op.drop_table("section")
    op.drop_table("offeredinrelations")
    op.drop_table("courselecturerrelations")
    with op.batch_alter_table("lerneinheit", schema=None) as batch_op:
        batch_op.add_column(sa.Column("prufungsblock", sa.JSON(), nullable=True))
        batch_op.add_column(sa.Column("learning_materials", sa.JSON(), nullable=True))
        batch_op.add_column(
            sa.Column("learning_materials_english", sa.JSON(), nullable=True)
        )
        batch_op.add_column(
            sa.Column(
                "occurence",
                sa.Enum("NO", "YES", "CANCELLED", name="occurenceenum"),
                nullable=True,
            )
        )
        batch_op.drop_column("url")

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("lerneinheit", schema=None) as batch_op:
        batch_op.add_column(sa.Column("url", sa.VARCHAR(length=1000), nullable=True))
        batch_op.drop_column("occurence")
        batch_op.drop_column("learning_materials_english")
        batch_op.drop_column("learning_materials")
        batch_op.drop_column("prufungsblock")

    op.create_table(
        "courselecturerrelations",
        sa.Column("course_number", sa.VARCHAR(), nullable=False),
        sa.Column("lecturer_id", sa.INTEGER(), nullable=False),
        sa.ForeignKeyConstraint(
            ["course_number"], ["course.number"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(["lecturer_id"], ["lecturer.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("course_number", "lecturer_id"),
    )
    op.create_table(
        "offeredinrelations",
        sa.Column("teaching_unit_id", sa.INTEGER(), nullable=False),
        sa.Column("section_id", sa.INTEGER(), nullable=False),
        sa.Column("type", sa.VARCHAR(length=6), nullable=False),
        sa.ForeignKeyConstraint(
            ["section_id"], ["section.section_id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["teaching_unit_id"], ["teachingunit.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("teaching_unit_id", "section_id"),
    )
    op.create_table(
        "section",
        sa.Column("section_id", sa.INTEGER(), nullable=False),
        sa.Column("name", sa.VARCHAR(), nullable=False),
        sa.Column("parent_id", sa.VARCHAR(), nullable=True),
        sa.PrimaryKeyConstraint("section_id"),
    )
    op.create_table(
        "examlecturerrelations",
        sa.Column("teaching_unit_id", sa.INTEGER(), nullable=False),
        sa.Column("lecturer_id", sa.INTEGER(), nullable=False),
        sa.ForeignKeyConstraint(["lecturer_id"], ["lecturer.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(
            ["teaching_unit_id"], ["teachingunit.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("teaching_unit_id", "lecturer_id"),
    )
    op.create_table(
        "lecturer",
        sa.Column("id", sa.INTEGER(), nullable=False),
        sa.Column("firstname", sa.VARCHAR(), nullable=False),
        sa.Column("lastname", sa.VARCHAR(), nullable=False),
        sa.Column("golden_owl", sa.BOOLEAN(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "teachingunit",
        sa.Column("abstract", sa.VARCHAR(), nullable=True),
        sa.Column("learning_objective", sa.VARCHAR(), nullable=True),
        sa.Column("content", sa.VARCHAR(), nullable=True),
        sa.Column("notice", sa.VARCHAR(), nullable=True),
        sa.Column("competencies", sa.VARCHAR(), nullable=True),
        sa.Column("lecture_notes", sa.VARCHAR(), nullable=True),
        sa.Column("literature", sa.VARCHAR(), nullable=True),
        sa.Column("other_data", sqlite.JSON(), nullable=True),
        sa.Column("two_semester_credits", sa.FLOAT(), nullable=True),
        sa.Column("programme_regulations", sqlite.JSON(), nullable=True),
        sa.Column("together_with_number", sa.VARCHAR(), nullable=True),
        sa.Column("ects_credits", sa.FLOAT(), nullable=False),
        sa.Column("examiner_ids", sqlite.JSON(), nullable=True),
        sa.Column("assessment_type", sa.VARCHAR(), nullable=False),
        sa.Column("assessment_language", sa.VARCHAR(), nullable=False),
        sa.Column("repetition", sa.VARCHAR(), nullable=False),
        sa.Column("exam_block_of", sqlite.JSON(), nullable=True),
        sa.Column("mode", sa.VARCHAR(), nullable=True),
        sa.Column("additional_info", sa.VARCHAR(), nullable=True),
        sa.Column("written_aids", sa.VARCHAR(), nullable=True),
        sa.Column("distance", sa.VARCHAR(), nullable=True),
        sa.Column("digital", sa.VARCHAR(), nullable=True),
        sa.Column("update_note", sa.VARCHAR(), nullable=True),
        sa.Column("admission_requirement", sa.VARCHAR(), nullable=True),
        sa.Column("other_assessment", sqlite.JSON(), nullable=True),
        sa.Column("id", sa.INTEGER(), nullable=False),
        sa.Column("number", sa.VARCHAR(), nullable=False),
        sa.Column("year", sa.INTEGER(), nullable=False),
        sa.Column("name", sa.VARCHAR(), nullable=False),
        sa.Column("semester", sa.VARCHAR(length=2), nullable=False),
        sa.Column("text_language", sa.VARCHAR(), nullable=False),
        sa.Column("language", sa.VARCHAR(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("teachingunit", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_teachingunit_number"), ["number"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_teachingunit_name"), ["name"], unique=False
        )

    op.create_table(
        "course",
        sa.Column("number", sa.VARCHAR(), nullable=False),
        sa.Column("name", sa.VARCHAR(), nullable=False),
        sa.Column("teaching_unit_id", sa.INTEGER(), nullable=False),
        sa.Column("slots", sqlite.JSON(), nullable=True),
        sa.Column("type", sa.VARCHAR(length=1), nullable=False),
        sa.Column("comments", sa.VARCHAR(), nullable=True),
        sa.ForeignKeyConstraint(
            ["teaching_unit_id"], ["teachingunit.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("number"),
    )
    # ### end Alembic commands ###
